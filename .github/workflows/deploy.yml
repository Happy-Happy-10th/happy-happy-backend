name: Dev Deploy to NCP

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: yottaeyo-registry.kr.ncr.ntruss.com
      IMAGE_NAME: yottaeyo-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set YML
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          rm src/main/resources/application-local.yml
          rm src/main/resources/application-test.yml

      - name: Install Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.5

      - name: Build with Gradle
        run: gradle bootJar

      - name: Set Date
        run: |
          echo "DATE_TAG=$(TZ=Asia/Seoul date +'%y%m%d')" >> $GITHUB_ENV
      - id: commit-hash
        uses: prompt/actions-commit-hash@v3

      - name: Login to NCP Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build, tag, and push image to NCP Container registry
        env:
          IMAGE_TAG: ${{ format('{0}-{1}', env.DATE_TAG, steps.commit-hash.outputs.short) }}
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
          docker tag $REGISTRY/$IMAGE_NAME:$IMAGE_TAG $REGISTRY/$IMAGE_NAME:latest
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_TAG
          docker push $REGISTRY/$IMAGE_NAME:latest

      - name: SSH to NCP Server Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_DEV_IP }}
          username: root
          password: ${{ secrets.NCP_DEV_PASSWORD }}
          script: |
            docker login $REGISTRY -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}
            cd /root/deploy 
            docker compose down
            docker compose pull
            docker compose up -d
            docker image prune -f
